Indico backup guide
====================

0. Purpose of this document

    Indico comes with no backuping tool or policy so you'll have to set up one
on your own. 
    This documents aims at compilating instructions and important issues to 
take into account when planning to stablish a backup policy over the Indico
system and how to recover different versions from the existing backups.


1. General concerns
    
    Concerning the backup, there are two important parts of Indico which need
to be preserved:
    
    i) The Indico database: a single file where all the objects of the system
is kept. Its location depends on you configuration, please look at your ZODB
configuration to figure out where the DB file is located in your system.
    ii) The Indico archive: a directory structure where "binary" data (normally
material files attached to conference objects) is kept. Its location is given 
by the Indico main configuration file (common/MaKaCConfig.py) so please refer
to it to know where it is located.

    Both items are needed in order to make an Indico system to run correctly so
if you plan to backup you must consider both (even if they are in different 
machines). Normally the "archive" is maintained using some counters and paths 
which are kept into the DB so when planning your backup both items should be 
kept synchronised so you can retrieve from your backuping system a snapshot of
both items in the same time instant.
    Other things like the configuration file could also be considered to be 
backed up as it can contain information you may want to preserve, but this is 
not mandatory as this can be changed or adapted.


2. DB backup

    Indico system uses a DB called ZODB [1]. Normally Indico runs as a service 
and therefore the DB server cannot be interrupted so making an ordinary copy of
the main db file (example: data.fs) is not always safe as you could copy the 
file and have a non-consistent version (for example if you copy the file in the
middle of a transaction commit). For this purpose when you install the ZODB 
package a script called "repozo.py" should be installed on your <python>/bin 
directory. You can have a look at the docstring of this script as it contains 
enough information about how to make a backup of a FileStorage ZODB file. For 
the time beign, it is the only reliable way of doing a reliable "hot copy" of 
the DB. 
    Other alternatives are to stop the DB server, make an ordnary copy of the 
DB file and start it again.

    Another impotant issue is the Indico software version. One of the 
particularities of ZODB is that it only stores objects but not code; 
the problem is that your client must have the righ version of the code if you
want to make it work correctly otherwise you can get into troubles when having
a DB with a non-corresponding code. You shouldn't have much problems with 
Indico if you try to run an older DB with a newer code; problems can only 
appear when there are major release changes (for example: you could have 
troubles if you restore a DB which was running with a version 0.2.X and you
try to make it run under an Indico distribution with version 0.4.X); on these
cases please contact Indico developers in order to see what is required to make
your old DB work with the new code. At the moment there's no way to know which
version of the code was running over a certain DB (we'll try to fix this for
future releases) so it would be good to keep a log of Indico upgrades with the
corresponding dates.


3. Archive backup

    This is not as complex as DB backuping as the archive consists of a simple
directory structure where some files are stored distributed along some 
directories. You can perform the backuping of this element by just making an 
ordinary copy of the whole archive directory structre (starting from the point
where you have set up the archive in the MaKaCConfig.py file) or put them in 
a single tar/zip file.


4. Restoring

    Restoring depends a lot on your backuping policy so we won't enter in much
detail about how to restore from a backup service as it can differ a lot.
    However we'll suppose you are able to recover a snapshot of the system data 
(both the archive and db) for a certain moment. The restoring procedure is 
quite simple: make an Indico installation which is compatible (in terms of
code version, see point 2 of this document for more info) with the DB you 
restored and restore the DB and the archive on the adequate paths. Everything 
should work fine.
    In the case you want to restore a DB with a newer version of the Indico 
software (specially when there a major release change involved) you must be 
careful that your DB doesn't need to be upgraded too; contact the Indico team
in order to make sure you can perform the restoring without any trouble (in the
future, there will some documentation on each version change informing about 
what is required to upgrade the DB for version changes).


References

[1] ZODB frontpage <http://www.zope.org/Wikis/ZODB/FrontPage>
