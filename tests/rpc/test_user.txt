Tests user-related methods
==========================

>>> from datetime import datetime, date
>>> import time
>>> from testenv import endPoint, errorFrom, ordDict
>>> from MaKaC.common.utils import parseDate, parseTime
>>> endPoint.test.login(username="johndoe", password="johndoe")[:10]
'johndoe OK'


Event List
**********

>>> d = endPoint.user.event.list(time=None)
>>> type(d)
<type 'dict'>

For all the entries:
     correct type,
     start date > end date,
     roles belong to the set of possible roles
     start date and timestamp represent the same date/time

>>> for elem in d.values():
... 	assert(elem['evtType'] in ["Lecture", "Meeting", "Conference"])
...	(sd,ed) = (parseDate(elem['startDate']), parseDate(elem['endDate']))
...	(st,et) = (parseTime(elem['startTime']), parseTime(elem['endTime']))
...	assert(ed >= sd)
...	assert(et > st)
...	assert(not any(map(lambda r: not (r in ['creator']), elem['roles'])))
... 	tup = list(sd.timetuple())
...	tup[3] = st.hour
...	tup[4] = st.minute
...	tup[5] = st.second
...	tup[6] = st.microsecond
...	assert(elem['timestamp'] == time.mktime(tuple(tup)))
>>> ordDict(d)
[('0', {'evtType': 'Lecture', 'startDate': '01/04/2008', 'endDate': '01/04/2008', 'roles': ['creator'], 'title': 'lecture 1', 'timestamp': 1207029600.0, 'startTime': '08:00', 'endTime': '09:00', 'type': 'past', 'id': '0'}), ('1', {'evtType': 'Lecture', 'startDate': '15/04/2008', 'endDate': '15/04/2008', 'roles': ['creator'], 'title': 'lecture 2', 'timestamp': 1208239200.0, 'startTime': '08:00', 'endTime': '09:00', 'type': 'past', 'id': '1'}), ('2', {'evtType': 'Meeting', 'startDate': '27/11/2020', 'endDate': '27/11/2020', 'roles': ['creator'], 'title': 'meeting 1', 'timestamp': 1606460400.0, 'startTime': '08:00', 'endTime': '18:00', 'type': 'future', 'id': '2'})]

Favorite users
**************

>>> endPoint.user.favorites.addUser(id=1)
>>> errorFrom(endPoint.user.favorites.addUser, id=1)
'ERR-U1'
>>> endPoint.user.favorites.listUsers()
[{'fax': '', 'name': 'Strange Love', 'firstName': 'Strange', 'title': 'Dr.', 'familyName': 'Love', 'telephone': '', 'email': 'strangelove@example.com', 'affiliation': 'Pentagon', 'address': '', 'id': '1'}]
>>> endPoint.user.favorites.removeUser(id=1)
>>> errorFrom(endPoint.user.favorites.removeUser, id=1)
'ERR-U2'
>>> errorFrom(endPoint.user.favorites.addUser, id=-1)
'ERR-U0'
>>> errorFrom(endPoint.user.favorites.addUser, id=0)
'ERR-U3'

Personal Information
********************

>>> ordDict(endPoint.user.personalinfo.get())
[('tabAdvancedMode', False)]
>>> ordDict(endPoint.user.personalinfo.set(value={'tabAdvancedMode': True}))
[('tabAdvancedMode', True)]
>>> ordDict(endPoint.user.personalinfo.set(value={'tabAdvancedMode': False}))
[('tabAdvancedMode', False)]
