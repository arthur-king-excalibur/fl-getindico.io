--- indico/htdocs/js/jquery/jquery-ui-1.8.16.custom.js	2011-11-09 02:03:38.000000000 +0100
+++ indico/htdocs/js/jquery/jquery-ui.js	2011-11-09 11:04:52.359308000 +0100
@@ -8349,6 +8349,7 @@
 		constrainInput: true, // The input is constrained by the current date format
 		showButtonPanel: false, // True to show button panel, false to not show it
 		autoSize: false, // True to size the input for the date format, false to leave as is
+		unifyNumRows: false, // True to always use six rows; ensuring datepickers showing different months having the same height
 		disabled: false // The initial disabled state
 	};
 	$.extend(this._defaults, this.regional['']);
@@ -9721,6 +9722,7 @@
 		var showOtherMonths = this._get(inst, 'showOtherMonths');
 		var selectOtherMonths = this._get(inst, 'selectOtherMonths');
 		var calculateWeek = this._get(inst, 'calculateWeek') || this.iso8601Week;
+		var unifyNumRows = this._get(inst, 'unifyNumRows');
 		var defaultDate = this._getDefaultDate(inst);
 		var html = '';
 		for (var row = 0; row < numMonths[0]; row++) {
@@ -9760,7 +9762,7 @@
 				if (drawYear == inst.selectedYear && drawMonth == inst.selectedMonth)
 					inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);
 				var leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
-				var curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate
+				var curRows = unifyNumRows ? 6 : Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate
 				var numRows = (isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows); //If multiple months, use the higher number of rows (see #7043)
 				this.maxRows = numRows;
 				var printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));
